language: node_js

sudo: false

addons:
  apt:
    sources: [ 'ubuntu-toolchain-r-test' ]
    packages: [ 'libstdc++-4.9-dev' ]

install:
  - ./scripts/setup.sh --config local.env
  - source local.env
  - node -v
  - which node
  - clang++ -v
  - which clang++
  - make ${BUILDTYPE}

before_script:
  - npm test
  - ./scripts/publish.sh --toolset=${TOOLSET:-} --debug=$([ "${BUILDTYPE}" == 'debug' ] && echo "true" || echo "false")

script: []

matrix:
  include:
    # linux publishable node v4/release
    - os: linux
      env: BUILDTYPE=release
      node_js: 4
    # linux publishable node v4/debug
    - os: linux
      env: BUILDTYPE=debug
      node_js: 4
    # linux publishable node v6
    - os: linux
      env: BUILDTYPE=release
      node_js: 6
    # linux publishable node v6/debug
    - os: linux
      env: BUILDTYPE=debug
      node_js: 6
    # osx publishable node v4
    - os: osx
      osx_image: xcode8.2
      env: BUILDTYPE=release
      node_js: 4
    # osx publishable node v6
    - os: osx
      osx_image: xcode8.2
      env: BUILDTYPE=release
      node_js: 6
    # Sanitizer build node v4/Debug
    - os: linux
      env: BUILDTYPE=debug TOOLSET=asan
      node_js: 4
      install:
        - ./scripts/setup.sh --config local.env
        - source local.env
        - export CXXFLAGS="${MASON_SANITIZE_CXXFLAGS} -fno-sanitize-recover=all"
        - export LDFLAGS="${MASON_SANITIZE_LDFLAGS}"
        - make ${BUILDTYPE}
      before_script:
        - export LD_PRELOAD=${MASON_LLVM_RT_PRELOAD}
        - export ASAN_OPTIONS=fast_unwind_on_malloc=0:${ASAN_OPTIONS}
        - npm test
        - unset LD_PRELOAD
        - ./scripts/publish.sh --toolset=${TOOLSET:-} --debug=$([ "${BUILDTYPE}" == 'debug' ] && echo "true" || echo "false")
    # g++ build (default builds all use clang++)
    - os: linux
      env: BUILDTYPE=debug CXX="g++-6" CC="gcc-6" CXXFLAGS="-Weffc++"
      node_js: 4
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++-6-dev
            - g++-6
      install:
        - make ${BUILDTYPE}
      before_script:
        - npm test
    # Coverage build
    - os: linux
      env: BUILDTYPE=debug CXXFLAGS="--coverage" LDFLAGS="--coverage"
      node_js: 4
      before_script:
        - npm test
        - mason install llvm-cov ${MASON_LLVM_RELEASE}
        - mason link llvm-cov ${MASON_LLVM_RELEASE}
        - which llvm-cov
        - curl -S -f https://codecov.io/bash -o codecov
        - chmod +x codecov
        - ./codecov -x "llvm-cov gcov" -Z
    - os: linux
      language: generic
      env: BUILDTYPE=debug
      node_js: 4
      install:
        - make tidy
        - make format
      before_script:
